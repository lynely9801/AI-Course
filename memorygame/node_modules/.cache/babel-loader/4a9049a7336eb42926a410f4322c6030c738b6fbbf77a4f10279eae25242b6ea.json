{"ast":null,"code":"var _jsxFileName = \"/Users/aht/Documents/AHT/AI-Course/AI-Source-code/memorygame/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard';\nimport PlayerPanel from './components/PlayerPanel';\nimport Controls from './components/Controls';\nimport { fetchRandomPokemon } from './utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZES = [4, 6, 8];\nexport default function App() {\n  _s();\n  const [gridSize, setGridSize] = useState(4);\n  const [numPlayers, setNumPlayers] = useState(1);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [scores, setScores] = useState([0, 0]);\n  const [turn, setTurn] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    async function setupGame() {\n      setLoading(true);\n      const numPairs = gridSize * gridSize / 2;\n      const pokemons = await fetchRandomPokemon(numPairs);\n      let deck = pokemons.flatMap(p => [{\n        ...p,\n        uniqueId: `${p.id}-a`,\n        isFlipped: false,\n        isMatched: false\n      }, {\n        ...p,\n        uniqueId: `${p.id}-b`,\n        isFlipped: false,\n        isMatched: false\n      }]);\n      deck = deck.sort(() => Math.random() - 0.5);\n      setCards(deck);\n      setScores([0, 0]);\n      setTurn(0);\n      setGameOver(false);\n      setLoading(false);\n    }\n    setupGame();\n  }, [gridSize, numPlayers]);\n  function handleMatch(player) {\n    setScores(prev => {\n      const newScores = [...prev];\n      newScores[player]++;\n      return newScores;\n    });\n  }\n  function handleGameOver() {\n    setGameOver(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      gridSize: gridSize,\n      setGridSize: setGridSize,\n      numPlayers: numPlayers,\n      setNumPlayers: setNumPlayers,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerPanel, {\n      numPlayers: numPlayers,\n      scores: scores,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(GameBoard, {\n      cards: cards,\n      setCards: setCards,\n      gridSize: gridSize,\n      numPlayers: numPlayers,\n      turn: turn,\n      setTurn: setTurn,\n      onMatch: handleMatch,\n      onGameOver: handleGameOver,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dBayfj8EXCx7M6kM20XXNMLqzs0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","PlayerPanel","Controls","fetchRandomPokemon","jsxDEV","_jsxDEV","GRID_SIZES","App","_s","gridSize","setGridSize","numPlayers","setNumPlayers","cards","setCards","loading","setLoading","scores","setScores","turn","setTurn","gameOver","setGameOver","setupGame","numPairs","pokemons","deck","flatMap","p","uniqueId","id","isFlipped","isMatched","sort","Math","random","handleMatch","player","prev","newScores","handleGameOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onMatch","onGameOver","_c","$RefreshReg$"],"sources":["/Users/aht/Documents/AHT/AI-Course/AI-Source-code/memorygame/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard';\nimport PlayerPanel from './components/PlayerPanel';\nimport Controls from './components/Controls';\nimport { fetchRandomPokemon } from './utils/api';\n\nconst GRID_SIZES = [4, 6, 8];\n\nexport default function App() {\n  const [gridSize, setGridSize] = useState(4);\n  const [numPlayers, setNumPlayers] = useState(1);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [scores, setScores] = useState([0, 0]);\n  const [turn, setTurn] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    async function setupGame() {\n      setLoading(true);\n      const numPairs = (gridSize * gridSize) / 2;\n      const pokemons = await fetchRandomPokemon(numPairs);\n      let deck = pokemons.flatMap(p => [\n        { ...p, uniqueId: `${p.id}-a`, isFlipped: false, isMatched: false },\n        { ...p, uniqueId: `${p.id}-b`, isFlipped: false, isMatched: false }\n      ]);\n      deck = deck.sort(() => Math.random() - 0.5);\n      setCards(deck);\n      setScores([0, 0]);\n      setTurn(0);\n      setGameOver(false);\n      setLoading(false);\n    }\n    setupGame();\n  }, [gridSize, numPlayers]);\n\n  function handleMatch(player) {\n    setScores(prev => {\n      const newScores = [...prev];\n      newScores[player]++;\n      return newScores;\n    });\n  }\n\n  function handleGameOver() {\n    setGameOver(true);\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1>Memory Game</h1>\n      <Controls\n        gridSize={gridSize}\n        setGridSize={setGridSize}\n        numPlayers={numPlayers}\n        setNumPlayers={setNumPlayers}\n        disabled={loading}\n      />\n      <PlayerPanel\n        numPlayers={numPlayers}\n        scores={scores}\n        turn={turn}\n      />\n      {loading ? <div>Loading...</div> : (\n        <GameBoard\n          cards={cards}\n          setCards={setCards}\n          gridSize={gridSize}\n          numPlayers={numPlayers}\n          turn={turn}\n          setTurn={setTurn}\n          onMatch={handleMatch}\n          onGameOver={handleGameOver}\n          gameOver={gameOver}\n        />\n      )}\n      {gameOver && <div className=\"game-over\">Game Over!</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}