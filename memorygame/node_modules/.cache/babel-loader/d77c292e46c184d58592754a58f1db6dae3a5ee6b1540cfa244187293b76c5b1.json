{"ast":null,"code":"var _jsxFileName = \"/Users/aht/Documents/AHT/AI-Course/AI-Source-code/memorygame/src/components/GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameBoard({\n  cards,\n  setCards,\n  gridSize,\n  numPlayers,\n  turn,\n  setTurn,\n  onMatch,\n  onGameOver,\n  gameOver\n}) {\n  _s();\n  const [flipped, setFlipped] = useState([]);\n  useEffect(() => {\n    // Khi có 2 thẻ đang lật ngửa\n    if (flipped.length === 2) {\n      const [first, second] = flipped;\n      if (cards[first].id === cards[second].id) {\n        // Nếu giống nhau: đánh dấu matched và cộng điểm\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map((c, idx) => idx === first || idx === second ? {\n            ...c,\n            isMatched: true\n          } : c));\n          onMatch(turn);\n          setFlipped([]);\n          // Kiểm tra kết thúc game\n          if (cards.filter(c => c.isMatched).length + 2 === cards.length) {\n            onGameOver();\n          }\n        }, 500);\n      } else {\n        // Nếu khác nhau: úp lại sau 1 giây\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map((c, idx) => idx === first || idx === second ? {\n            ...c,\n            isFlipped: false\n          } : c));\n          setFlipped([]);\n          if (numPlayers === 2) setTurn(t => 1 - t);\n        }, 1000);\n      }\n    }\n  }, [flipped]);\n  function handleCardClick(idx) {\n    if (gameOver) return;\n    if (cards[idx].isFlipped || cards[idx].isMatched || flipped.length === 2) return;\n    setCards(prevCards => prevCards.map((c, i) => i === idx ? {\n      ...c,\n      isFlipped: true\n    } : c));\n    setFlipped(f => [...f, idx]);\n  }\n  const style = {\n    gridTemplateColumns: `repeat(${gridSize}, 1fr)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    style: style,\n    children: cards.map((card, idx) => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      onClick: () => handleCardClick(idx)\n    }, card.uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"omdLIUcYsZJ6B27L2Ag+gLIJz8g=\");\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","GameBoard","cards","setCards","gridSize","numPlayers","turn","setTurn","onMatch","onGameOver","gameOver","_s","flipped","setFlipped","length","first","second","id","setTimeout","prevCards","map","c","idx","isMatched","filter","isFlipped","t","handleCardClick","i","f","style","gridTemplateColumns","className","children","card","onClick","uniqueId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aht/Documents/AHT/AI-Course/AI-Source-code/memorygame/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\n\nexport default function GameBoard({ cards, setCards, gridSize, numPlayers, turn, setTurn, onMatch, onGameOver, gameOver }) {\n  const [flipped, setFlipped] = useState([]);\n\n  useEffect(() => {\n    // Khi có 2 thẻ đang lật ngửa\n    if (flipped.length === 2) {\n      const [first, second] = flipped;\n      if (cards[first].id === cards[second].id) {\n        // Nếu giống nhau: đánh dấu matched và cộng điểm\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map((c, idx) =>\n            idx === first || idx === second ? { ...c, isMatched: true } : c\n          ));\n          onMatch(turn);\n          setFlipped([]);\n          // Kiểm tra kết thúc game\n          if (cards.filter(c => c.isMatched).length + 2 === cards.length) {\n            onGameOver();\n          }\n        }, 500);\n      } else {\n        // Nếu khác nhau: úp lại sau 1 giây\n        setTimeout(() => {\n          setCards(prevCards => prevCards.map((c, idx) =>\n            idx === first || idx === second ? { ...c, isFlipped: false } : c\n          ));\n          setFlipped([]);\n          if (numPlayers === 2) setTurn(t => 1 - t);\n        }, 1000);\n      }\n    }\n  }, [flipped]);\n\n  function handleCardClick(idx) {\n    if (gameOver) return;\n    if (cards[idx].isFlipped || cards[idx].isMatched || flipped.length === 2) return;\n    setCards(prevCards => prevCards.map((c, i) => i === idx ? { ...c, isFlipped: true } : c));\n    setFlipped(f => [...f, idx]);\n  }\n\n  const style = {\n    gridTemplateColumns: `repeat(${gridSize}, 1fr)`\n  };\n\n  return (\n    <div className=\"game-board\" style={style}>\n      {cards.map((card, idx) => (\n        <Card key={card.uniqueId} card={card} onClick={() => handleCardClick(idx)} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,IAAI;EAAEC,OAAO;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzH,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAGJ,OAAO;MAC/B,IAAIV,KAAK,CAACa,KAAK,CAAC,CAACE,EAAE,KAAKf,KAAK,CAACc,MAAM,CAAC,CAACC,EAAE,EAAE;QACxC;QACAC,UAAU,CAAC,MAAM;UACff,QAAQ,CAACgB,SAAS,IAAIA,SAAS,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KACzCA,GAAG,KAAKP,KAAK,IAAIO,GAAG,KAAKN,MAAM,GAAG;YAAE,GAAGK,CAAC;YAAEE,SAAS,EAAE;UAAK,CAAC,GAAGF,CAChE,CAAC,CAAC;UACFb,OAAO,CAACF,IAAI,CAAC;UACbO,UAAU,CAAC,EAAE,CAAC;UACd;UACA,IAAIX,KAAK,CAACsB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACE,SAAS,CAAC,CAACT,MAAM,GAAG,CAAC,KAAKZ,KAAK,CAACY,MAAM,EAAE;YAC9DL,UAAU,CAAC,CAAC;UACd;QACF,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACL;QACAS,UAAU,CAAC,MAAM;UACff,QAAQ,CAACgB,SAAS,IAAIA,SAAS,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KACzCA,GAAG,KAAKP,KAAK,IAAIO,GAAG,KAAKN,MAAM,GAAG;YAAE,GAAGK,CAAC;YAAEI,SAAS,EAAE;UAAM,CAAC,GAAGJ,CACjE,CAAC,CAAC;UACFR,UAAU,CAAC,EAAE,CAAC;UACd,IAAIR,UAAU,KAAK,CAAC,EAAEE,OAAO,CAACmB,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC;QAC3C,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;EAEb,SAASe,eAAeA,CAACL,GAAG,EAAE;IAC5B,IAAIZ,QAAQ,EAAE;IACd,IAAIR,KAAK,CAACoB,GAAG,CAAC,CAACG,SAAS,IAAIvB,KAAK,CAACoB,GAAG,CAAC,CAACC,SAAS,IAAIX,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IAC1EX,QAAQ,CAACgB,SAAS,IAAIA,SAAS,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEO,CAAC,KAAKA,CAAC,KAAKN,GAAG,GAAG;MAAE,GAAGD,CAAC;MAAEI,SAAS,EAAE;IAAK,CAAC,GAAGJ,CAAC,CAAC,CAAC;IACzFR,UAAU,CAACgB,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAEP,GAAG,CAAC,CAAC;EAC9B;EAEA,MAAMQ,KAAK,GAAG;IACZC,mBAAmB,EAAE,UAAU3B,QAAQ;EACzC,CAAC;EAED,oBACEJ,OAAA;IAAKgC,SAAS,EAAC,YAAY;IAACF,KAAK,EAAEA,KAAM;IAAAG,QAAA,EACtC/B,KAAK,CAACkB,GAAG,CAAC,CAACc,IAAI,EAAEZ,GAAG,kBACnBtB,OAAA,CAACF,IAAI;MAAqBoC,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACL,GAAG;IAAE,GAA/DY,IAAI,CAACE,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoD,CAC7E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAnDuBV,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}